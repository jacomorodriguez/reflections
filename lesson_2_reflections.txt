Q: What happens when you initialize a repository? Why do you need to do it?

A:
Git creates the .git folder and its neccessary files. No commites are made, but everything in this directory gets setup for feature works with git.

Q:
How is the staging area different from the working directory and the repository? What value do you think it offers?

A:
The staging are contains only the changed files which were added to the "next" commit. The working directory contains all files, with all changes. The repository contains only the old version of the files.

Q:
How can you use the staging area to make sure you have one commit per logical change?

A:
By comparing the staging area to the working directory, you can check, if just one logical change has been staged to be commited.

Q:
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

A:
Trying a new feature, translating, creating a different version. It helps by seperating the changes from your normal workspace so you are able to switch back end forth beetween different versions of the project

Q:
How do the diagrams help you visualize the branch structure?

A:
You can see your current state of your branches. You can see how far a branch is to another or what features other brnaches have added.

Q:
What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A:
The branch you merging them into will have all* changes from both branches.
(*sometimes two branches change the same thing, than only one chnage is keeped)

Q:
What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

A:
Pro:
Faster

Con:
Could break the code